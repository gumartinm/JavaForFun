<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-config.dtd">

<configuration>
<settings>
    <!--
    MyBatis uses two caches: a local cache and a second level cache.

    Each time a new session is created MyBatis creates a local cache and attaches
    it to the session. Any query executed within the session will be stored in
    the local cache so further executions of the same query with the same input
    parameters will not hit the database. The local cache is cleared upon update,
    commit, rollback and close.

    By default local cache data is used for the whole session duration. This cache
    is needed to resolve circular references and to speed up repeated nested queries,
    so it can never be completely disabled but you can configure the local cache to
    be used just for the duration of an statement execution by setting localCacheScope=STATEMENT.

    Note that when the localCacheScope is set to SESSION, MyBatis returns references
    to the same objects which are stored in the local cache. Any modification of
    returned object (lists etc.) influences the local cache contents and subsequently
    the values which are returned from the cache in the lifetime of the session.
    Therefore, as best practice, do not to modify the objects returned by MyBatis. -->
    <setting name="cacheEnabled" value="false"/>
    <setting name="localCacheScope" value="STATEMENT"/>
    <setting name="lazyLoadingEnabled" value="false"/>
    <setting name="aggressiveLazyLoading" value="false"/>
    <setting name="multipleResultSetsEnabled" value="true"/>
    <setting name="useColumnLabel" value="false"/>
    <setting name="useGeneratedKeys" value="false"/>
    <setting name="autoMappingBehavior" value="PARTIAL"/>
    <setting name="defaultExecutorType" value="SIMPLE"/>
    <setting name="defaultStatementTimeout" value="5"/>
    <setting name="safeRowBoundsEnabled" value="false"/>
    <setting name="mapUnderscoreToCamelCase" value="false"/>
    <setting name="jdbcTypeForNull" value="OTHER"/>
    <setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode,toString"/>
    <setting name="logPrefix" value="mybatislogger"/>
    <setting name="logImpl" value="LOG4J"/>
    <setting name="proxyFactory" value="CGLIB"/>
  </settings>
  <environments default="mybatisexample">
    <environment id="mybatisexample">
      <transactionManager type="JDBC"/>
      <dataSource type="UNPOOLED">
        <property name="driver" value="com.mysql.jdbc.Driver"/>
        <!--
        If you are dropping like me (by means of some firewall) IPV6 connections and you feel
        during the first MySLQ connection as if there is a huge lag and you are using
        *NIX, you could use this system property -Djava.net.preferIPv4Stack=true
        in order to stop using IPV6 from JVM.
        The JVM tries to find out if IPV6 is available by means of opening a random
        AF_INET6 POSIX socket.
         -->
        <property name="url" value="jdbc:mysql://localhost:3306/mybatis_example?characterEncoding=UTF-8"/>
        <property name="username" value="root"/>
        <property name="password" value="root"/>
      </dataSource>
    </environment>
  </environments>
  <mappers>
    <mapper resource="de/example/mybatis/repository/mapper/AdDescriptionMapper.xml"/>
    <mapper resource="de/example/mybatis/repository/mapper/AdMapper.xml"/>
  </mappers>
</configuration>