<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>web-services-spring-rest-bom</artifactId>
		<groupId>de.spring.webservices</groupId>
		<version>1.0-SNAPSHOT</version>
	</parent>
	<artifactId>web-services-spring-rest-server</artifactId>
	<name>web-services-spring-rest-server</name>
	<url>http://gumartinm.name</url>
	
    <properties>
        <docker.keepContainer>false</docker.keepContainer>
        <docker.keepRunning>false</docker.keepRunning>
        <docker.removeVolumes>true</docker.removeVolumes>
        <!-- When runnin on your PC  
        <database.port>5432</database.port>
        -->
    </properties>


	<dependencies>
		<dependency>
			<groupId>de.spring.webservices</groupId>
			<artifactId>web-services-spring-rest-global</artifactId>
			<version>1.0-SNAPSHOT</version>
		</dependency>
		
	    <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        
        <!-- Required dependency for using org.springframework.data.domain.Page -->
	    <dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-commons</artifactId>
		</dependency>

		<dependency>
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis-spring</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>

        <!-- Health check service with user and password -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>


        <!--
             Jackson dependency required for serializing and deserializing LocalDateTime,
             LocalDate, etc, etc objects.
        -->
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>
		
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>		

		<dependency>
		    <groupId>org.postgresql</groupId>
		    <artifactId>postgresql</artifactId>
		</dependency>
		<dependency>
			<groupId>net.postgis</groupId>
			<artifactId>postgis-jdbc</artifactId>
		</dependency>
		    
		<!-- Unitary and integration tests -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
		<dependency>
		    <groupId>org.mybatis.spring.boot</groupId>
		    <artifactId>mybatis-spring-boot-starter-test</artifactId>
		    <version>1.3.2</version>
		</dependency>
		

		<!-- API documentation -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.6.1</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.6.1</version>
		</dependency>
		
	</dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>build-info</goal>
                        </goals>
                    </execution>
                </executions>
             </plugin>
             <plugin>
            	<groupId>pl.project13.maven</groupId>
            	<artifactId>git-commit-id-plugin</artifactId>
        	</plugin>
        	
        	<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<configuration>
					<images>
						<image>
							<name>kartoza/postgis:9.5-2.2</name>
			                  <!--  
							<external>
								<type>compose</type>
								<basedir>src/test/resources/docker</basedir>
								<composeFile>docker-compose.yml</composeFile>
							</external>
							-->
							<run>
								<privileged>true</privileged>
								<ports>
								    <port>database.port:5432</port>
								 </ports>
								 <env>
								 	<POSTGRES_USER>locationclosure</POSTGRES_USER>
								 	<POSTGRES_PASS>locationclosure</POSTGRES_PASS>
								 	<POSTGRES_DBNAME>locationclosure</POSTGRES_DBNAME>
								 	<ALLOW_IP_RANGE>0.0.0.0/0</ALLOW_IP_RANGE>
								 </env>
								<wait>
									<time>5000</time>
								</wait>
								<log>
									<color>GREEN</color>
									<prefix>Docket integration test</prefix>
								</log>
							</run>
						</image>
					</images>
				</configuration>
				<executions>
					<execution>
						<id>start</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
        </plugins>
    </build>

</project>
