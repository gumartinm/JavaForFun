# Spring Boot configuration properties
spring:
  application:
    name: spring-sqs-server
  main:
    banner-mode: "LOG"

server:
  port: 8080

# By default Spring Boot uses logback.
# logging:
#   level:
#     org:
#       springframework: info
#     ROOT: info
   
# Using log4j2 (just for fun) It requires exclusions in spring-boot-starter because by default
# Spring Boot will pick up the logback dependency :/
logging:
  config: classpath:log4j2.xml
 

# AWS
cloud:
  aws:
    credentials:
      # Two options:
      # 1- Declaring keys:
      accessKey: ${AWS_ACCES_KEY}
      secretKey: ${AWS_SECRET_KEY}
      
      # 2- Given some IAM role to the AWS instance where this app will be running (it only works when running inside EC2 instances)
      # AWS SDK used by Spring will retrieve the credentials from http://169.254.169.254/latest/meta-data/iam/security-credentials/
      # Because of this line: https://github.com/spring-cloud/spring-cloud-aws/blob/1f54f4bc96e162c41af9bcd6db6dc3bc49aa7cf7/spring-cloud-aws-autoconfigure/src/main/java/org/springframework/cloud/aws/autoconfigure/context/ContextCredentialsAutoConfiguration.java#L54
      # if you want to use instanceProfile, accesKey must be commented out :/  IMHO it sucks!!!!
      # WARNING: IT WILL NOT WORK FROM developer's PC BECASUE THERE IS NOT ACCESS TO http://169.254.169.254
      # So, this configuration just works inside EC2 instances!!!
      # instanceProfile: true
    region:
      # For development environments:
      auto: false
      static: eu-west-1
      # Anywhere else (inside EC2 instances)
      # auto: true
      
app:
  aws:
    sqs:
      queue-name: ${AWS_SQS_QUEUE_NAME}
