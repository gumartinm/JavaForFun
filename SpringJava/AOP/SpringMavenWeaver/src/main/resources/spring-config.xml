<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" 
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
  						   http://www.springframework.org/schema/beans/spring-beans.xsd
  						   http://www.springframework.org/schema/context 
  						   http://www.springframework.org/schema/context/spring-context.xsd">
    
	
	<!--
		There is no need of declaring aspects in Spring xml files because I am using aspectj-maven-plugin
	<bean id="myAdvice" class="de.spring.example.aspects.MyAspect" />
    <bean id="beforeMyAdvice" class="de.spring.example.aspects.BeforeMyAspect" />
    -->

 	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
                <property name="user" value="root"/>
                <property name="password" value=""/>
                <property name="driverClass" value="com.mysql.jdbc.Driver"/>
                <property name="jdbcUrl" value="jdbc:mysql://127.0.0.1:3306/example?autoReconnect=true"/>
                <property name="initialPoolSize" value="5"/>
                <property name="maxPoolSize" value="20"/>
                <property name="minPoolSize" value="10"/>
                <property name="acquireIncrement" value="1"/>
                <property name="acquireRetryAttempts" value="5"/>
                <property name="acquireRetryDelay" value="1000"/>
                <property name="automaticTestTable" value="con_test"/>
                <property name="checkoutTimeout" value="5000"/>
    </bean>
 
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<bean id="myTransactionManager"
	       class="de.spring.example.TransactionManager"
	       factory-method="getInstance">
        <property name="transactionManager">
            <ref bean="transactionManager" />
        </property>
    </bean>
	
	<!-- 
    		In order to find annotations in inner classes we have to create Spring 
    	beans of them. NO WHEN WEAVING!!! :)
    -->
    <bean id="testOuter" class="de.spring.example.web.Test"/>
    
    <!--
    	WHEN WEAVING WE MAY ANNOTATE METHODS IN INNER CLASSES. SO, WE DO NOT NEED TO CREATE
    	Spring BEANS OF THEM. WITH PROXY AOP WE HAVE TO, BUT WHEN WEAVING NO!!!  
    <bean id="testInner" class="de.spring.example.web.Test$InnerTest">
        <constructor-arg ref="testOuter"/>
    </bean>
    -->
    
</beans>
