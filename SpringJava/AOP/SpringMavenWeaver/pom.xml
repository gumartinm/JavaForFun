<?xml version="1.0" encoding="UTF-8"?>

<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	
	<modelVersion>4.0.0</modelVersion>
    <groupId>de.spring.example</groupId>
	<artifactId>spring-maven-weaver</artifactId>
    <version>2.0-SNAPSHOT</version>
	<name>spring-maven-weaver</name>
	<url>http://gumartinm.name</url>
    <properties>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

	<dependencies> 
       <dependency>
           <groupId>org.springframework</groupId>
           <artifactId>spring-context</artifactId>
           <version>4.2.5.RELEASE</version>
           <!-- 
               Required dependency for getting rid of commons logging and use my own logging library
               (in my case I decided to use log4j 2 under slf4j)
           -->
           <exclusions>
               <exclusion>
                   <groupId>commons-logging</groupId>
                   <artifactId>commons-logging</artifactId>
               </exclusion>
           </exclusions>
       </dependency>
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-aspects</artifactId>
          <version>4.2.5.RELEASE</version>
          <!-- 
              Required dependency for getting rid of commons logging and use my own logging library
              (in my case I decided to use log4j 2 under slf4j)
          -->
          <exclusions>
              <exclusion>
                  <groupId>commons-logging</groupId>
                  <artifactId>commons-logging</artifactId>
              </exclusion>
          </exclusions>
      </dependency>
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-aop</artifactId>
          <version>4.2.5.RELEASE</version>
          <!-- 
              Required dependency for getting rid of commons logging and use my own logging library
              (in my case I decided to use log4j 2 under slf4j)
          -->
          <exclusions>
              <exclusion>
                  <groupId>commons-logging</groupId>
                  <artifactId>commons-logging</artifactId>
              </exclusion>
          </exclusions>
      </dependency>

		<dependency>
    		<groupId>javax.cache</groupId>
    		<artifactId>cache-api</artifactId>
    		<version>1.0.0-PFD</version>
		</dependency>
		<dependency>
		    <groupId>javax.transaction</groupId>
		    <artifactId>javax.transaction-api</artifactId>
		    <version>1.2</version>
		</dependency>
		<dependency>
    		<groupId>org.springframework</groupId>
    		<artifactId>spring-context-support</artifactId>
    		<version>4.2.5.RELEASE</version>
    		          <!-- 
              Required dependency for getting rid of commons logging and use my own logging library
              (in my case I decided to use log4j 2 under slf4j)
          -->
          <exclusions>
              <exclusion>
                  <groupId>commons-logging</groupId>
                  <artifactId>commons-logging</artifactId>
              </exclusion>
          </exclusions>
		</dependency>
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-jdbc</artifactId>
          <version>4.2.5.RELEASE</version>
          <!-- 
              Required dependency for getting rid of commons logging and use my own logging library
              (in my case I decided to use log4j 2 under slf4j)
          -->
          <exclusions>
              <exclusion>
                  <groupId>commons-logging</groupId>
                  <artifactId>commons-logging</artifactId>
              </exclusion>
          </exclusions>
      </dependency>

		<!-- Using aspectj-maven-plugin with AJDT, requires 1.8.7 version -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>1.8.7</version>
			<scope>compile</scope>
		</dependency>

      <dependency>
        <groupId>cglib</groupId>
        <artifactId>cglib</artifactId>
        <version>3.2.1</version>
      </dependency>

		<dependency>
			<groupId>com.mchange</groupId>
			<artifactId>c3p0</artifactId>
			<version>0.9.5.2</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.38</version>
		</dependency>

      <!--
          1/3 Required dependency for log4j 2 with slf4j: binding between log4j 2 and slf4j
      -->
      <dependency>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-slf4j-impl</artifactId>
          <version>2.3</version>
      </dependency>
      <!--
          2/3 Required dependency for log4j 2 with slf4j: log4j 2 maven plugin (it is the log4j 2 implementation)
      -->
      <dependency>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-core</artifactId>
          <version>2.3</version>
      </dependency>
      <!-- 
          3/3 Required dependency for getting rid of commons logging.
          This is the BRIDGE (no binding) between Jakarta Commons Logging (used by Spring) and whatever
          I am using for logging (in this case I am using log4j 2)
          See: http://www.slf4j.org/legacy.html
          
          We need exclusions in every dependency using Jakarta Commons Logging (see Spring dependencies below)
       -->
      <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>jcl-over-slf4j</artifactId>
          <version>1.7.12</version>
      </dependency>

	</dependencies>
    <build>
      <plugins>
          <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-compiler-plugin</artifactId>
              <version>3.3</version>
              <configuration>
                  <source>1.8</source>
                  <target>1.8</target>
                  <encoding>${project.build.sourceEncoding}</encoding>
              </configuration>
			  <executions>
				  <execution>
					  <!-- Modifying output directory of default compile because non-weaved 
						  classes must be stored in separate folder to not confuse ajc by reweaving 
						  already woven classes (which leads to to ajc error message like "bad weaverState.Kind: 
						  -115") -->
					  <id>default-compile</id>
					  <configuration>
					  </configuration>
				  </execution>
			  </executions>
          </plugin>
          <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-resources-plugin</artifactId>
              <version>2.7</version>
              <configuration>
                  <encoding>${project.build.sourceEncoding}</encoding>
              </configuration>
          </plugin>

		<plugin>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>aspectj-maven-plugin</artifactId>
			<version>1.8</version>
			<configuration>
				<!--  
          		<ajdtBuildDefFile>build.ajproperties</ajdtBuildDefFile>
          		-->
          		<source>1.8</source>
                <target>1.8</target>
                <encoding>${project.build.sourceEncoding}</encoding>
                <complianceLevel>1.8</complianceLevel>                    
                <verbose>true</verbose>
                <warn>constructorName,packageDefaultMethod,deprecation,maskedCatchBlocks,unusedLocals,unusedArguments,unusedImports</warn>
                <crossrefs>true</crossrefs>
				<weaveDirectories>
            		<weaveDirectory>${project.build.directory}/classes</weaveDirectory>
          		</weaveDirectories>
          		<showWeaveInfo>true</showWeaveInfo>
          		<outxml>true</outxml>
				<sources>
					<source>
						<basedir>src/main/java</basedir>
						<includes>
							<include>**/*.java</include>
						</includes>
						<excludes>
							<exclude>**/logging/*.aj</exclude>
						</excludes>
					</source>
				</sources>
			</configuration>
	        <executions>
	          <execution>
	            <!-- Compile and weave aspects after all classes compiled by javac -->
	            <id>weave-classes</id>
	            <phase>process-classes</phase>
	            <goals>
	              <goal>compile</goal>
	            </goals>
	          </execution>
	        </executions>

		</plugin>
      </plugins>
    </build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>aspectj-maven-plugin</artifactId>
				<version>1.8</version>
				<configuration>
					<verbose>true</verbose>
					<privateScope>true</privateScope>
					<complianceLevel>1.8</complianceLevel>
					<!-- 
					<ajdtBuildDefFile>build.ajproperties</ajdtBuildDefFile>
					-->
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>aspectj-report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>
  
</project>
