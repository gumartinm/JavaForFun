<?xml version="1.0" encoding="UTF-8"?>

<!-- 
	status: The level of internal Log4j events that should be logged to the console.
	Valid values for this attribute are "trace", "debug", "info", "warn", "error" and "fatal".
	
	monitorInterval: The minimum amount of time, in seconds, that must elapse before the file configuration is checked for changes.
	
	
	see https://logging.apache.org/log4j/2.x/manual/configuration.html
 -->
<Configuration status="error" strict="true" monitorInterval="30"
                name="XMLConfigTest" packages="org.apache.logging.log4j.test">
                
	<!--
		ALL > TRACE > DEBUG > INFO > WARN > ERROR > OFF
		
		ERROR by default.
	-->
                
    <Appenders>
        <Appender type="Console" name="STDOUT">
            <PatternLayout pattern="%d{HH:mm:ss.SSS} %-5level %t %class{36} %L %M - %msg%xEx%n"/>
        </Appender>
    </Appenders>
    <Loggers>
    
    
    	<!-- 
    		State and counters. Requires INFO level.
    	 -->
        <Logger
        	name="org.springframework.web.socket.config.WebSocketMessageBrokerStats"
        		level="INFO" additivity="false">
            <AppenderRef ref="STDOUT" />
        </Logger>


    	<!-- 
    		SockJS logs. Requires TRACE or DEBUG levels.
    	-->
        <Logger
        	name="org.springframework.web.socket.handler.LoggingWebSocketHandlerDecorator"
        		level="TRACE" additivity="false">
            <AppenderRef ref="STDOUT" />
        </Logger>

 
     	<!-- 
    		SockJS Exceptions. Requires ERROR or DEBUG levels.
    	-->
        <Logger
        	name="org.springframework.web.socket.handler.ExceptionWebSocketHandlerDecorator"
        		level="DEBUG" additivity="false">
            <AppenderRef ref="STDOUT" />
        </Logger>
    	
    	
    	<!-- 
    		SockJS client disconnects. Requires TRACE level always.
    		It works because I know for sure I will be using WebSockets when using SockJS.
    	-->
        <Logger
        	name="org.springframework.web.socket.sockjs.transport.session.WebSocketServerSockJsSession"
        		level="TRACE" additivity="false">
            <AppenderRef ref="STDOUT" />
        </Logger>
        
        
        <!-- 
        	Separate logger to use on network IO failure after a client has gone away.
        	See: DISCONNECTED_CLIENT_LOG_CATEGORY in org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession
         -->
        <Logger
        	name="org.springframework.web.socket.sockjs.DisconnectedClient"
        		level="TRACE" additivity="false">
            <AppenderRef ref="STDOUT" />
        </Logger>
    
       	<!-- 
    		General logging Spring.
    	 -->
        <Logger name="org.springframework" level="INFO" additivity="false">
            <AppenderRef ref="STDOUT" />
        </Logger>
    

		<!-- 
			Anything else will be using TRACE logging level.
		 -->        
        <Root level="INFO">
            <AppenderRef ref="STDOUT"/>
        </Root>
    </Loggers>
</Configuration>
