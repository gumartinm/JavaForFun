<?xml version="1.0" encoding="UTF-8"?>

<!-- 
	status: The level of internal Log4j events that should be logged to the console.
	Valid values for this attribute are "trace", "debug", "info", "warn", "error" and "fatal".
	
	monitorInterval: The minimum amount of time, in seconds, that must elapse before the file configuration is checked for changes.
	
	
	see https://logging.apache.org/log4j/2.x/manual/configuration.html
 -->
<Configuration status="error" strict="true" monitorInterval="30"
                name="XMLConfigTest" packages="org.apache.logging.log4j.test">
                
	<!--
		ALL > TRACE > DEBUG > INFO > WARN > ERROR > OFF
		
		ERROR by default.
	-->
                
    <Appenders>
        <Appender type="Console" name="STDOUT">
            <PatternLayout pattern="%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n"/>
        </Appender>
    </Appenders>
    <Loggers>
    

    <!-- 
    	General logging Spring.
   	-->
	<Logger name="org.springframework" level="INFO" additivity="false">
		<AppenderRef ref="STDOUT" />
	</Logger>
    
    <!--
    	How to log Hibernate QUERIES by means of LOG4J/SLF4J:
    		
    	See: org.hibernate.engine.jdbc.spi.SqlStatementLogger
    		
    	1. With hibernate.show_sql=false we stop Hibernate logging to STDOUT.
    	2. DEBUG level (see SqlStatementLogger) is the only way of logging QUERIES using LOG4J.
    		SqlStatementLogger uses log.DEBUG and no other level :(
    	3. JVM requires the following system property: -Dorg.jboss.logging.provider=slf4j for using LOG4J.
    -->
	<Logger name="org.hibernate.SQL" level="DEBUG" additivity="false">
		<AppenderRef ref="STDOUT" />
	</Logger>

	<!--
		Logging Hibernate QUERY PARAMETERS requires TRACE level.
	 -->
	<Logger name="org.hibernate.type.descriptor.sql.BasicBinder" level="TRACE" additivity="false">
		<AppenderRef ref="STDOUT" />
	</Logger>


	<!-- 
		Anything else will be using INFO logging level.
	-->        
    <Root level="INFO">
    	<AppenderRef ref="STDOUT"/>
    </Root>
        
    </Loggers>
</Configuration>
