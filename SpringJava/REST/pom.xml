<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>de.spring.webservices</groupId>
	<artifactId>web-services-spring-rest</artifactId>
	<packaging>war</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>web-services-spring-rest</name>
	<url>http://gumartinm.name</url>
	<description>Web Services REST Spring Framework</description>
	<organization>
		<name>Gustavo Martin Morcuende</name>
		<url>http://www.gumartinm.name</url>
	</organization>
	<scm>
		<developerConnection>scm:git:http://git.gumartinm.name/JavaForFun</developerConnection>
		<url>http://git.gumartinm.name/JavaForFun</url>
	</scm>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<spring.version>4.2.4.RELEASE</spring.version>
	</properties>

	<profiles>
		<profile>
			<id>release</id>
			<properties>
				<environment.profile>release</environment.profile>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>documentation</id>
			<properties>
				<environment.profile>documentation</environment.profile>
			</properties>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<dependencies>
				<!-- API documentation -->
				<dependency>
					<groupId>io.springfox</groupId>
					<artifactId>springfox-swagger2</artifactId>
					<version>2.3.0</version>
				</dependency>
				<dependency>
					<groupId>io.springfox</groupId>
					<artifactId>springfox-swagger-ui</artifactId>
					<version>2.3.0</version>
				</dependency>
			</dependencies>
			<build>
				<resources>
					<resource>
						<directory>${basedir}/src/doc/main/resources/</directory>
						<includes>
							<include>**/*.*</include>
						</includes>
					</resource>
				</resources>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>1.10</version>
						<executions>
							<execution>
								<id>add-source</id>
								<phase>process-sources</phase>
								<goals>
									<goal>add-source</goal>
								</goals>
								<configuration>
									<sources>
										<source>src/doc/main/java/</source>
									</sources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<dependencies>
	    <!--
        	1/3 Required dependency for log4j 2 with slf4j: binding between log4j 2 and slf4j
    	-->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>2.3</version>
		</dependency>
		<!--
        	2/3 Required dependency for log4j 2 with slf4j: log4j 2 maven plugin (it is the log4j 2 implementation)
    	-->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.3</version>
		</dependency>
		<!-- 
			3/3 Required dependency for getting rid of commons logging.
			This is the BRIDGE (no binding) between Jakarta Commons Logging (used by Spring) and whatever
			I am using for logging (in this case I am using log4j 2)
			See: http://www.slf4j.org/legacy.html
			
			We need exclusions in every dependency using Jakarta Commons Logging (see Spring dependencies below)
		 -->
		<dependency>
    		<groupId>org.slf4j</groupId>
    		<artifactId>jcl-over-slf4j</artifactId>
    		<version>1.7.12</version>
		</dependency>
		
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>2.2.2</version>
		</dependency>
			<dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${spring.version}</version>
				<!-- 
					Required dependency for getting rid of commons logging and use my own logging library
					(in my case I decided to use log4j 2 under slf4j)
				 -->
				<exclusions>
         			<exclusion>
            			<groupId>commons-logging</groupId>
            			<artifactId>commons-logging</artifactId>
         			</exclusion>
      			</exclusions>
			</dependency>
			<dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${spring.version}</version>
				<!-- 
					Required dependency for getting rid of commons logging and use my own logging library
					(in my case I decided to use log4j 2 under slf4j)
				 -->
				<exclusions>
         			<exclusion>
            			<groupId>commons-logging</groupId>
            			<artifactId>commons-logging</artifactId>
         			</exclusion>
      			</exclusions>
			</dependency>

			<!-- Required by spring-webmvc -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>4.0.0-b01</version>
                <scope>provided</scope>
            </dependency>
            
            <!-- Jackson JSON Processor, required by spring-webmvc. See messageConverters in rest-config.xml -->
			<dependency>
			    <groupId>com.fasterxml.jackson.core</groupId>
			    <artifactId>jackson-databind</artifactId>
			    <version>2.6.4</version>
			</dependency>

			<!-- Required by spring-context for using JSR-303. See LocalValidatorFactoryBean in rest-config.xml -->
			<dependency>
				<groupId>javax.validation</groupId>
				<artifactId>validation-api</artifactId>
				<version>1.1.0.Final</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>5.2.2.Final</version>
			</dependency>
			

			<!-- Unitary and integration tests -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.12</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>2.0.11-beta</version>
				<scope>test</scope>
			</dependency>

			<!-- Required by MockMvcResultMatchers (spring-test framework) -->
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-core</artifactId>
				<version>1.3</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-library</artifactId>
				<version>1.3</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.jayway.jsonpath</groupId>
				<artifactId>json-path</artifactId>
				<version>2.1.0</version>
				<scope>test</scope>
			</dependency>
			
	</dependencies>
	<build>
        <finalName>${project.artifactId}</finalName>
        <resources>
            <resource>
                <directory>${basedir}/src/main/webapp</directory>
                <excludes>
                    <exclude>**/*.*</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>${basedir}/src/main/resources/</directory>
                <includes>
                    <include>**/*.*</include>
                </includes>
            </resource>
        </resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<archive>
						<manifestEntries>
							<Specification-Title>${project.description}</Specification-Title>
							<Specification-Version>${project.version}</Specification-Version>
							<Specification-Vendor>${project.organization.name}</Specification-Vendor>
							<Implementation-Title>${project.description}</Implementation-Title>
							<Implementation-Version>${project.version}</Implementation-Version>
							<Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.18.1</version>
				<configuration>
					<excludes>
						<exclude>**/*IntegrationTest.java</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
                <version>2.18.1</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<includes>
						<include>**/*IntegrationTest.java</include>
					</includes>
				</configuration>
			</plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <webResources>
                        <resource>
                            <filtering>true</filtering>
                            <directory>src/main/webapp</directory>
                            <includes>
                                <include>WEB-INF/web.xml</include>
                            </includes>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
		</plugins>
	</build>
</project>
